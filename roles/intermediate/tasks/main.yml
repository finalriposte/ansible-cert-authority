- block:
  - name: "Checking intermediate directories."
    stat:
      path: '{{ item }}'
    register: folder_stats
    with_items:
    - ['{{ ca_root_dir }}/{{ int_domain }}',
       '{{ ca_root_dir }}/{{ int_domain }}/certs',
       '{{ ca_root_dir }}/{{ int_domain }}/crl',
       '{{ ca_root_dir }}/{{ int_domain }}/csr',
       '{{ ca_root_dir }}/{{ int_domain }}/newcerts',
       '{{ ca_root_dir }}/{{ int_domain }}/private']
  - name: "Creating directories."
    file:
      path: "{{ item.item }}"
      state: directory
      mode: 0700
      group: root
      owner: root
    when: item.stat.exists == false
    with_items:
      - '{{folder_stats.results}}'

- name: "Create serial file"
  register: serial
  template:
    src: serial.j2
    dest: '{{ ca_root_dir }}/{{ int_domain }}/serial'
    mode: 0600
    group: root
    owner: root

- name: create CA text files
  register: index.txt
  template:
    src: index.txt.j2
    dest: '{{ ca_root_dir }}/{{ int_domain }}/index.txt'
    mode: 0600
    owner: root
    group: root

- name: "Create crlnumber file"
  register: crlnumber
  template:
    src: crlnumber.j2
    dest: '{{ ca_root_dir }}/{{ int_domain }}/crlnumber'
    mode: 0600
    group: root
    owner: root

- name: "Create configuration file."
  register: int-ca-config
  template:
    src: openssl-int.cnf.j2
    dest: '{{ ca_root_dir }}/{{ int_domain }}/{{ int_domain }}-intca.cnf'
    mode: 0600
    owner: root
    group: root 
    
- name: "Create intermediate private key"
  environment:
    OPENSSL_CONF: '{{ int_domain }}/{{ int_domain }}-intca.cnf'
  shell: openssl genrsa -aes256 -out '{{ int_domain }}/private/{{ int_domain }}-ca.key.pem' 4096
  args:
    chdir: '{{ ca_root_dir }}'

- name: "Setting private key permissions"
  file:
    path: '{{ca_root_dir }}/{{ int_domain }}/private/{{ int_domain }}-ca.key.pem'
    mode: 0400
    owner: root
    group: root

- name: "Using openssl to create the CSR."
  environment:
  shell: openssl req -config '{{ ca_root_dir }}/{{ int_domain }}/{{ int_domain }}-intca.cnf' -new -sha256 -key '{{ ca_root_dir }}/{{ int_domain }}/private/{{ int_domain }}-ca.key.pem' -out '{{ ca_root_dir }}/{{ int_domain}}/csr/intermediate.csr.pem' -subj '/C={{ country }}/ST={{ state }}/L={{ loc }}/OU={{ org }}/O={{ org }}/CN={{ int_domain }} {{ common }}'

- name: "Now create the cert."
  environment:
  shell: openssl ca -config '{{ ca_root_dir }}/{{ catype }}-ca.cnf' -extensions v3_intermediate_ca -days 3650 -notext -md sha256 -in '{{ ca_root_dir }}/{{ int_domain }}/csr/intermediate.csr.pem' -out '{{ ca_root_dir }}/{{ int_domain }}/certs/{{ int_domain }}.cert.pem' -batch

- name: "verify permissions."
  file:
    path: '{{ ca_root_dir }}/{{ int_domain}}/certs/{{ int_domain }}.cert.pem' 
    mode: 0400
    owner: root
    group: root

- name: "Now create the crl."
  environment:
<<<<<<< HEAD
  shell: openssl ca -config '{{ ca_root_dir }}/{{ int_domain }}/{{ int_domain }}-intca.cnf' -gencrl -out '{{ ca_root_dir }}/{{ int_domain }}/crl/intermediate.crl.pem'

- name: "verify permissions."
  file:
    path: '{{ ca_root_dir }}/{{ int_domain}}/crl/intermediate.crl.pem'
    mode: 0400
    owner: root
    group: root

- name: "Now create the OCSP private key."
  environment:
  shell: openssl genrsa -aes256 -out '{{ ca_root_dir }}/{{ int_domain }}/private/ocsp.{{ int_domain }}.key.pem' 4096

- name: "Now create the OCSP csr."
  environment:
  shell: openssl req -config '{{ ca_root_dir }}/{{ int_domain }}/{{ int_domain }}-intca.cnf' -new -sha256 -key '{{ ca_root_dir }}/{{ int_domain }}/private/ocsp.{{ int_domain}}.key.pem' -out '{{ ca_root_dir }}/{{ int_domain }}/csr/ocsp.{{ int_domain }}.csr.pem' -subj '/C={{ country }}/ST={{ state }}/L={{ loc }}/OU={{ org }}/O={{ org }}/CN=ocsp.{{ domain }}'

- name: "Now create the OCSP cert."
  environment:
  shell: openssl ca -config '{{ ca_root_dir }}/{{ int_domain }}/{{ int_domain }}-intca.cnf' -extensions ocsp -days 375 -notext -md sha256 -in '{{ ca_root_dir }}/{{ int_domain }}/csr/ocsp.{{ int_domain }}.csr.pem' -out '{{ ca_root_dir }}/{{ int_domain }}/certs/ocsp.{{ int_domain }}.cert.pem' -batch

- name: "verify permissions."
  file:
    path: '{{ ca_root_dir }}/{{ int_domain }}/private/ocsp.{{ int_domain }}.key.pem'
    mode: 0400
    owner: root
    group: root

- name: "verify permissions."
  file:
    path: '{{ ca_root_dir }}/{{ int_domain}}/certs/ocsp.{{ int_domain }}.cert.pem'
    mode: 0400
    owner: root
    group: root
=======
  shell: openssl ca -config '{{ ca_root_dir }}/{{ int_domain }}/{{ catype }}-intca.cnf' -gencrl -out '{{ ca_root_dir }}/{{ int_domain }}/crl/intermediate.crl.pem'
>>>>>>> d9fa34ff97403889245db49c37595a1fa2b28abb
